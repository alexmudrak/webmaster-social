[project]
name = ""
version = ""
description = ""
authors = [
    {name = "alexmudrak", email = "tiit.learn@gmail.com"},
]
dependencies = [
    "fastapi>=0.105.0",
    "uvicorn>=0.24.0.post1",
    "asyncpg>=0.29.0",
    "sqlmodel>=0.0.14",
    "alembic>=1.13.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.25.2",
    "beautifulsoup4>=4.12.2",
    "Authlib>=1.3.0",
    "requests>=2.31.0",
    "pillow>=10.2.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[tool.pdm.scripts]
_.env_file = ".env"
init = "pre-commit install"
dev = "uvicorn main:app --reload"
prod = ""
manager = ""
migrate = "alembic revision --autogenerate"
migrate_apply = "alembic upgrade head"
# coverage = "pytest --cov=backend tests/ --cov-fail-under=80"
coverage = "pytest --cov=backend tests/ -vvv"
coverage-report-html = "pytest --cov=backend --cov-report=html tests/"

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.2",
]

[tool.pyright]
executionEnvironments = [
  { root = "./", extraPaths = [ "backend" ]  }
]

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
profile = "black"

[tool.ruff]
line-length = 79
fixable = ["ALL"]
unfixable = []

[tool.coverage.report]
exclude_lines= ["pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "raise Exception",
    "if __name__ == .__main__.:"]

omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/frontend/*",
    "*/migrations/*",
    "*/src/core/*",
    "*/src/manage.py",
    ]

[tool.coverage.run]
source = ["backend"]

omit = [
    "*/.virtualenvs/*",
    "*/virtualenvs/*",
    "*/tests/*",
    "*/.local/*",
    "*/__init__.py",
    "*/ui/*",
    "*/migrations/*",
    ]

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
norecursedirs = ["database"]
