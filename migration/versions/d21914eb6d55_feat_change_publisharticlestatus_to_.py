"""feat: change publishArticleStatus to ArticleStatus

Revision ID: d21914eb6d55
Revises: 413a36fd368f
Create Date: 2024-01-29 12:06:50.959085

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d21914eb6d55"
down_revision: Union[str, None] = "413a36fd368f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "article_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("article_id", sa.Integer(), nullable=False),
        sa.Column("setting_id", sa.Integer(), nullable=False),
        sa.Column(
            "status", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "status_text", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("try_count", sa.Integer(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["article_id"],
            ["article.id"],
        ),
        sa.ForeignKeyConstraint(
            ["setting_id"],
            ["setting.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "article_id", "setting_id", name="unique_article_setting"
        ),
    )
    op.execute(
        """
        INSERT INTO article_status (created, updated, article_id, setting_id,
        status, status_text, try_count, url)
        SELECT created, updated, article_id, setting_id, status, status_text,
        try_count, publish_article_link
        FROM publish_article_status
        """
    )
    op.drop_table("publish_article_status")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "publish_article_status",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "article_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "setting_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "status_text", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "try_count", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "publish_article_link",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["article_id"],
            ["article.id"],
            name="publish_article_status_article_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["setting_id"],
            ["setting.id"],
            name="publish_article_status_setting_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="publish_article_status_pkey"),
        sa.UniqueConstraint(
            "article_id", "setting_id", name="unique_article_setting"
        ),
    )
    op.drop_table("article_status")
    # ### end Alembic commands ###
